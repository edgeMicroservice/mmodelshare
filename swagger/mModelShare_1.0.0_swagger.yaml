swagger: '2.0'
info:
  version: 1.0.0
  title: mModelShare API
  # put the contact info for your development or API team
  contact:
    name: mimik
    url: 'https://mimik.com/use-cases/'
    email: support.sdk@mimik.com

  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
    
  description:
    "The mModelShare microservice is defined to do the following:\n
      • Upload the information about the machine learning model on your device to the mModelShare's local database.\n
      • Retrieve the information regarding specific machine learning models from local or nearby microservice database.\n
      • Retrieve machine learning models from other devices."
    
# tags are used for organizing operations
produces:
- application/json
consumes:
- application/json
# basePath: /messages/v1
securityDefinitions:
  bearerAuth:            # arbitrary name for the security scheme
    type: apiKey
    name: Authorization
    in: header
paths:
  /drives:
    get:
      description: Retrieve the devices with mModelShare microservice within nearby or local network
      parameters:
        - in: query
          name: type
          type: string
          required: false
          default: network
          description: query parameter can be either <b>network</b> or <b>nearby</b>, network searches for devices under local network and nearby searches for nearby devices
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful response, returns an object
          schema:
            $ref: '#/definitions/drives'
        404:
          description: Endpoint not found
          schema:
            type: string
            example: not found
        400:
          description: Bad request (wrong query input)
          schema:
            type: string
            example: type is not supported
  /nodes/{nodeId}:
    get:
      description: Retrieve node's info by using its node ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: nodeId
          type: string
          required: true
          description: node ID of the devices
      responses:
        200:
          description: Successful response, returns an object
          schema:
            $ref: '#/definitions/node'
        400:
          description: Bad request (wrong path input)
          schema:
            type: string
            example: node is not found
        404:
          description: Endpoint not found
          schema:
            type: string
            example: not found
  /bep:
    get:
      description: Retrieve a BEP from mSS
      responses:
        200:
          description: Successful response, returns an object
          schema:
            type: object
            properties:
              href:
                type: string
                example: "https://xxxxxxxxxxx-mss-eu-2.mimikxxxx.com/xxxxxxxxxxxxxxx"
        404:
          description: Endpoint not found
          schema:
            type: string
            example: not found
  /model:
    get:
      security:
        - bearerAuth: []
      description:
        Retrieve model file (with alt=media) or model info from the device
      parameters:
        - in: query
          name: alt
          required: false
          type: string
          description: If alt is specified with <b>media</b>, then a model file will be retrieved.
      responses:
        200:
          description: Successful response, returns an object
          schema:
            $ref: '#/definitions/model'
        400:
          description: Bad Request (wrong query input)
          schema:
            type: string
            example: no such file
        404:
          description: Endpoint not found
          schema:
            type: string
            example: not found
    post:
      security:
        - bearerAuth: []
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: metadata
          type: string
          required: true
          description: "Example JSON string: \n{'createTime':'Oct 10, 2018 10:43:42 AM','id': 'imagemodel.zip','kind':'model','mimeType':'application/zip','modelCreateTime':'Oct 10, 2018 10:43:42 AM','name':'model'}"
        - in: formData
          name: file
          required: true
          type: file
          description: Add Model File
      responses:
        200:
          description: Successful response, returns an object
          schema:
            $ref: '#/definitions/model'
        400:
          description: Bad Request (wrong formData)
          schema:
            type: string
            example: invalid or missing body || invalid metadata
        403:
          description: Unauthorized Access
          schema:
            type: string
            example: incorrect authorization key
        404:
          description: Endpoint not found
          schema:
            type: string
            example: not found
    delete:
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful response, returns an object
          schema:
            $ref: '#/definitions/model'
        400:
          description: Bad Request (wrong formData)
          schema:
            type: string
            example: 'no such file: fileId'
        403:
          description: Unauthorized Access
          schema:
            type: string
            example: incorrect authorization key
        404:
          description: Endpoint not found
          schema:
            type: string
            example: not found
definitions:
  drives:
    type: object
    properties:
      type:
        type: string
        example: network
      data:
        type: array
        items:
          $ref: '#/definitions/node'
  node:
    type: object
    properties:
      id:
        type: string
        example: xxxxxxxxx
      accountId:
        type: string
        example: xxxxxxxxxx
      name:
        type: string
        example: xxxx-PC-xxxxx
      routing:
        type: object
        properties:
          id: 
            type: string
            example: xxxxxxxxxxxxxx
      os:
        type: string
        example: macos
      url:
        type: string
        example: http://xxx.xx.x.xx:8083
  model:
    type: object
    properties:
      id:
        type: string
        example: imagemodel.zip
      kind:
        type: string
        example: drive#file
      name:
        type: string
        example: model
      mimeType:
        type: string
        example: application/zip
      createTime:
        type: string
        example: "2018-10-11T20:55:36.362Z"
      path:
        type: string
        example: imagemodel.zip
      size:
        type: integer
        example: 7065049